/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Color;
import javax.swing.JTextField;
/**
 *
 * @author WeSon8840
 */
public class ConvertMeGUI extends javax.swing.JFrame {

    /**
     * Creates new form ConvertMeGUI
     */
    public ConvertMeGUI() {
        initComponents();
        getContentPane().setBackground(Color.WHITE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Tittle = new javax.swing.JLabel();
        ITC = new javax.swing.JLabel();
        FTC = new javax.swing.JLabel();
        YTM = new javax.swing.JLabel();
        MTK = new javax.swing.JLabel();
        Choice = new javax.swing.JLabel();
        VauleConverte = new javax.swing.JLabel();
        EnterButton = new javax.swing.JButton();
        ChoiceInput = new javax.swing.JTextField();
        covertedInput = new javax.swing.JTextField();
        outputLable = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Tittle.setFont(new java.awt.Font("Script MT Bold", 1, 36)); // NOI18N
        Tittle.setForeground(new java.awt.Color(0, 51, 255));
        Tittle.setText("Linear Conversion");

        ITC.setFont(new java.awt.Font("SouvenirItcTEELig", 1, 16)); // NOI18N
        ITC.setText("1. Inches to Centimetres");

        FTC.setFont(new java.awt.Font("SouvenirItcTEELig", 1, 16)); // NOI18N
        FTC.setText("2. Feet to Centimetres");

        YTM.setFont(new java.awt.Font("SouvenirItcTEELig", 1, 16)); // NOI18N
        YTM.setText("3. Yards to Metres");

        MTK.setFont(new java.awt.Font("SouvenirItcTEELig", 1, 16)); // NOI18N
        MTK.setText("3. Miles to Kilometres");

        Choice.setFont(new java.awt.Font("SouvenirItcTEELig", 1, 16)); // NOI18N
        Choice.setText("Enter conversion choice  (1-4):");

        VauleConverte.setFont(new java.awt.Font("SouvenirItcTEELig", 1, 16)); // NOI18N
        VauleConverte.setText("Enter value to be converted:");

        EnterButton.setFont(new java.awt.Font("Lint McCree Intl BB", 0, 11)); // NOI18N
        EnterButton.setText("Convert");
        EnterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EnterButtonMouseClicked(evt);
            }
        });
        EnterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterButtonActionPerformed(evt);
            }
        });

        ChoiceInput.setFont(new java.awt.Font("SouvenirItcTEELig", 0, 16)); // NOI18N
        ChoiceInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChoiceInputActionPerformed(evt);
            }
        });

        covertedInput.setFont(new java.awt.Font("SouvenirItcTEELig", 0, 16)); // NOI18N

        outputLable.setFont(new java.awt.Font("SouvenirItcTEELig", 1, 16)); // NOI18N
        outputLable.setForeground(new java.awt.Color(255, 51, 51));

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ITC)
                            .addComponent(FTC)
                            .addComponent(YTM)
                            .addComponent(MTK)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Tittle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EnterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Choice)
                                .addGap(18, 18, 18)
                                .addComponent(ChoiceInput, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(VauleConverte)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(covertedInput, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(outputLable, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(Tittle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ITC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FTC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(YTM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MTK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Choice)
                    .addComponent(ChoiceInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VauleConverte)
                    .addComponent(covertedInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(EnterButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(outputLable, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public static int InchesToCentimetres(int x){
        int centimetres;
        centimetres = (int) (x * 2.54) ;
        return (centimetres);
    }
    
    public static int FeetToCentimetres(int x){
        int centimetres;
        centimetres = (int) (x * 30);
        return (centimetres);
    }
    
    public static int YardsToMetres(int x){
        int metres;
        metres = (int) (x * 0.91);
        return (metres);
    }
    
    public static int MilesToKilometres(int x){
        int kilometres;
        kilometres = (int)(x * 1.6);
        return (kilometres);
    }
    
    private void EnterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterButtonActionPerformed
        int type,converted;
        type = Integer.parseInt(ChoiceInput.getText());
        converted = Integer.parseInt(covertedInput.getText());
        
        if (type == 1) {
            outputLable.setText(converted+" inches = "+Integer.toString(InchesToCentimetres(converted))+" centimeters");
        }
        else if(type == 2){
            outputLable.setText(converted+" Feet = "+Integer.toString(FeetToCentimetres(converted))+" centimeters");
        }
        else if (type ==3){
            outputLable.setText(converted+" Yards = "+Integer.toString(YardsToMetres(converted))+" Metres");
        }
        else if (type ==4){
            outputLable.setText(converted+" Miles = "+Integer.toString(MilesToKilometres(converted))+" Kilometres");
        }
        else {
            outputLable.setText("Please try again");
        }
    }//GEN-LAST:event_EnterButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void EnterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EnterButtonMouseClicked
        EnterButton.setForeground(Color.gray);
    }//GEN-LAST:event_EnterButtonMouseClicked

    private void ChoiceInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChoiceInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChoiceInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConvertMeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConvertMeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConvertMeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConvertMeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConvertMeGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Choice;
    private javax.swing.JTextField ChoiceInput;
    private javax.swing.JButton EnterButton;
    private javax.swing.JLabel FTC;
    private javax.swing.JLabel ITC;
    private javax.swing.JLabel MTK;
    private javax.swing.JLabel Tittle;
    private javax.swing.JLabel VauleConverte;
    private javax.swing.JLabel YTM;
    private javax.swing.JTextField covertedInput;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JLabel outputLable;
    // End of variables declaration//GEN-END:variables

    private String InchesToCentimetres(JTextField covertedInput) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private String FeetToCentimetres(JTextField covertedInput) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private String YardsToMetres(JTextField covertedInput) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
